generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  outlet      outlet[]
  tool        tool[]
}

model feedback {
  id             String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id        String?      @db.Uuid
  reservation_id String?      @db.Uuid
  comment        String       @db.VarChar(255)
  created_at     DateTime     @default(now()) @db.Timestamp(6)
  updated_at     DateTime     @default(now()) @db.Timestamp(6)
  reservation    reservation? @relation(fields: [reservation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model outlet {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  location    String        @db.VarChar(255)
  company_id  String?       @db.Uuid
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  company     company?      @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reservation reservation[]
}

model reservation {
  id         String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tool_id    String?    @db.Uuid
  user_id    String?    @db.Uuid
  outlet_id  String?    @db.Uuid
  start_date DateTime   @db.Timestamp(6)
  end_date   DateTime   @db.Timestamp(6)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  feedback   feedback[]
  outlet     outlet?    @relation(fields: [outlet_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tool       tool?      @relation(fields: [tool_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tool {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String        @db.VarChar(255)
  company_id  String?       @db.Uuid
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  reservation reservation[]
  company     company?      @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  company     company[]
  feedback    feedback[]
  reservation reservation[]
}
